{{ define "flow.main.go" }}
package main

import (
	"github.com/state-alchemists/ayanami/config"
	"github.com/state-alchemists/ayanami/msgbroker"
	"github.com/state-alchemists/ayanami/service"
	"log"{{ _, $package := range .Packages }}
    "{{$package}}"{{ end }}
)

func main() {
	serviceName := "{{.ServiceName}}"
	// define broker
	broker, err := msgbroker.NewNats(config.GetNatsURL())
	if err != nil {
		log.Fatal(err)
	}
	// define services
	services := service.Services{
		service.NewFlow(serviceName, "{{.FlowName}}", broker,
			// inputs
			[]string{{{.Inputs}}},
			// outputs
			[]string{{{.Outputs}}},
			[]service.FlowEvent{{{ _, $event := range .Events }}
				service.FlowEvent{{{ $key, $val := range $event }}
					$key: $val,{{ end }}
				},{{end}}
			},
		),
	}
	// consume and publish forever
	ch := make(chan bool)
	services.ConsumeAndPublish(broker, "flow")
	<-ch
}
{{ end }}
